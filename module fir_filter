module fir_filter (
    input clk,
    input reset,
    input [7:0] x,           // Input sample
    output reg [15:0] y      // Filtered output
);

    parameter N = 4;         // Filter order
    reg [7:0] coeff [0:N-1]; // Coefficients
    reg [7:0] shift_reg [0:N-1];
    integer i;

    initial begin
        // Example: Low-pass filter coefficients
        coeff[0] = 8'd1;
        coeff[1] = 8'd2;
        coeff[2] = 8'd2;
        coeff[3] = 8'd1;
    end

    always @(posedge clk or posedge reset) begin
        if (reset) begin
            for (i = 0; i < N; i = i + 1)
                shift_reg[i] <= 0;
            y <= 0;
        end else begin
            // Shift samples
            for (i = N-1; i > 0; i = i - 1)
                shift_reg[i] <= shift_reg[i-1];
            shift_reg[0] <= x;

            // FIR calculation
            y <= 0;
            for (i = 0; i < N; i = i + 1)
                y <= y + coeff[i] * shift_reg[i];
        end
    end
endmodule
